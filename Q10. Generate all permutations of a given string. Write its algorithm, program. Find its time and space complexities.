import java.util.*;

public class StringPermutations {

   
    public static void generatePermutations(String str, int index, List<String> result) {
       
        if (index == str.length()) {
            result.add(str);
            return;
        }

  
        for (int i = index; i < str.length(); i++) {
            
            str = swap(str, index, i);
            
           
            generatePermutations(str, index + 1, result);
            
           
            str = swap(str, index, i);
        }
    }

   
    private static String swap(String str, int i, int j) {
        char[] charArray = str.toCharArray();
        char temp = charArray[i];
        charArray[i] = charArray[j];
        charArray[j] = temp;
        return new String(charArray);
    }

    public static void main(String[] args) {
        String str = "ABC";
        List<String> result = new ArrayList<>();

        generatePermutations(str, 0, result);

        System.out.println("Permutations: " + result);
    }
}
Space Complexity:O(n)

